{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","this","props","name","email","id","className","alt","src","Component","CardList","robots","map","user","i","SearchBox","type","placeholder","onChange","searchChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","setState","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAkBeA,E,4JAfX,WAEI,MAA4BC,KAAKC,MAAzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,GACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAA1B,cACvB,gCACI,6BAAKF,IACL,4BAAIC,c,GATLK,aC8BJC,E,4JA3BX,WAAU,IAAD,OAUL,OACI,8BACKT,KAAKC,MAAMS,OAAOC,KAAI,SAACC,EAAMC,GAC1B,OAAQ,cAAC,EAAD,CAEAT,GAAI,EAAKH,MAAMS,OAAOG,GAAGT,GACzBF,KAAM,EAAKD,MAAMS,OAAOG,GAAGX,KAC3BC,MAAO,EAAKF,MAAMS,OAAOG,GAAGV,OAHvBU,Y,GAfVL,aCaRM,E,4JAdX,WACI,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUjB,KAAKC,MAAMiB,qB,GARjBV,aCWTW,E,4JAVX,WACI,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKvB,KAAKC,MAAMuB,e,GAJPhB,aCoBNiB,G,wDAnBX,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IACDyB,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrB7B,KAAK8B,SAAS,CAAEH,UAAU,M,oBAG9B,WACI,OAAG3B,KAAK0B,MAAMC,SACH,yDAEJ3B,KAAKC,MAAMuB,a,GAhBEhB,cC4DbuB,E,kDArDX,aAAe,IAAD,8BACV,gBAqBJC,eAAiB,SAACC,GAEd,EAAKH,SAAS,CAAEI,YAAaD,EAAME,OAAOC,SAtB1C,EAAKV,MAAQ,CACThB,OAAQ,GACRwB,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAEhBG,MAAM,8CACLC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKX,SAAS,CAACpB,OAAQ+B,S,oBAa/B,WACI,MAAgCzC,KAAK0B,MAA7BhB,EAAR,EAAQA,OAAQwB,EAAhB,EAAgBA,YACVQ,EAAiBhC,EAAOiC,QAAO,SAAAC,GACjC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASZ,EAAYW,kBAGzD,OAAInC,EAAOqC,OAIH,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAclB,KAAKgC,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUtB,OAAQgC,WAR3B,gD,GApCDlC,aCIHwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMlCX,M","file":"static/js/main.f72f47e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        // all of this is JSX so we need to import React for it to work\r\n        const { name, email, id } = this.props;\r\n        return (\r\n            <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n                <img alt='robo-pic' src={`https://robohash.org/${id}?200x200`} />\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport Card from './Card'; \r\n\r\n// if this class were a function it'd be a pure function or dumb function\r\nclass CardList extends Component {\r\n    render() {\r\n        // const cardArray = this.props.robots.map((user, i) => {\r\n        //     return (<Card\r\n        //             key={i}\r\n        //             id={this.props.robots[i].id}\r\n        //             name={this.props.robots[i].name}\r\n        //             email={this.props.robots[i].email}\r\n        //         />\r\n        //     );\r\n        // })\r\n        return (\r\n            <div>\r\n                {this.props.robots.map((user, i) => {\r\n                    return (<Card \r\n                            key={i} \r\n                            id={this.props.robots[i].id} \r\n                            name={this.props.robots[i].name} \r\n                            email={this.props.robots[i].email}\r\n                        />\r\n                    );\r\n                })}\r\n                {/* {cardArray} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardList;","import React, { Component } from 'react';\r\n\r\nclass SearchBox extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"pa2\">\r\n                <input \r\n                    className=\"pa3 ba b--green bg-lightest-blue\"\r\n                    type='search' \r\n                    placeholder='Search Robots' \r\n                    onChange={this.props.searchChange}      // every time some change takes place(onChange is triggered) in searchbox, call searchChange\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\n\r\nclass Scroll extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {    // pass props paramaeter so that we can access it inside the constructor\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1>Ooops. This is not good</h1>\r\n        } \r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n// import { robots } from './robots'; // write in curly braces to destructure it as it is not export default\r\nimport './App.css';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()                 // calls constructor of the Compoenent class\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(\"check\");\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => {\r\n            return response.json();    // convert the response into json\r\n        })\r\n        .then(users => {\r\n            this.setState({robots: users});\r\n        })\r\n        \r\n    }\r\n\r\n    // when making userdefined functions in React, use arrow functions\r\n    // because \"this\" is considered to be variable from the event (which is input field from SearchBox and not App.js)\r\n    onSearchChange = (event) => {      // similar to onchange event in javascript\r\n        // this.state.searchField = something wont work, instead use:\r\n        this.setState({ searchField: event.target.value });\r\n        // console.log(event.target.value);\r\n    }\r\n    \r\n    render() {\r\n        const { robots, searchField } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        })\r\n        // console.log(filteredRobots);\r\n        if(!robots.length) {\r\n            return <h1>Loading...</h1>\r\n        } else {\r\n            return (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f2\">Robofriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App/>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}